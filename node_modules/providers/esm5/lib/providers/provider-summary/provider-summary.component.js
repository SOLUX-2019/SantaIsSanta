import { __decorate } from "tslib";
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { Provider } from '@brightpath/common';
import { ProvidersService } from '@brightpath/scheduling';
var ProviderSummaryComponent = /** @class */ (function () {
    function ProviderSummaryComponent(providerService) {
        this.providerService = providerService;
    }
    ProviderSummaryComponent.prototype.ngOnInit = function () {
        var _this = this;
        // console.log('ngOnInit and tplRef === ' + this.tplRef);
        if (this.provider === undefined || this.provider === null) {
            // we need to have a providerId or there's a problem here
            if (this.providerId === undefined || this.providerId === null) {
                this.provider = new Provider({
                    firstName: 'None',
                    lastName: ''
                });
            }
            else {
                this.providerService.getProviderById(this.providerId).then(function (result) {
                    _this.provider = new Provider(result);
                }).catch(function (error) {
                    console.log('An error occurred', error);
                });
            }
        }
    };
    ProviderSummaryComponent.ctorParameters = function () { return [
        { type: ProvidersService }
    ]; };
    __decorate([
        Input()
    ], ProviderSummaryComponent.prototype, "providerId", void 0);
    __decorate([
        Input()
    ], ProviderSummaryComponent.prototype, "provider", void 0);
    __decorate([
        ContentChild(TemplateRef)
    ], ProviderSummaryComponent.prototype, "tplRef", void 0);
    ProviderSummaryComponent = __decorate([
        Component({
            selector: 'provider-provider-summary',
            template: "<ng-template [customTemplate]=\"tplRef\">\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\" *ngIf=\"provider\">\n    <div>\n      <img class=\"avatar huge\" [src]=\"provider.imageUrl\">\n    </div>\n    <div fxFlex fxLayoutAlign=\"start center\" class=\"mat-h1\">\n      {{ provider.firstName }} {{ provider.lastName }}\n    </div>\n  </div>\n</ng-template>\n",
            styles: [""]
        })
    ], ProviderSummaryComponent);
    return ProviderSummaryComponent;
}());
export { ProviderSummaryComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItc3VtbWFyeS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9wcm92aWRlcnMvIiwic291cmNlcyI6WyJsaWIvcHJvdmlkZXJzL3Byb3ZpZGVyLXN1bW1hcnkvcHJvdmlkZXItc3VtbWFyeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQzVDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBT3hEO0lBTUUsa0NBQW9CLGVBQWlDO1FBQWpDLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtJQUFJLENBQUM7SUFFMUQsMkNBQVEsR0FBUjtRQUFBLGlCQWlCQztRQWhCQyx5REFBeUQ7UUFDekQsSUFBSyxJQUFJLENBQUMsUUFBUSxLQUFLLFNBQVMsSUFBSSxJQUFJLENBQUMsUUFBUSxLQUFLLElBQUksRUFBRTtZQUMxRCx5REFBeUQ7WUFDekQsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLFNBQVMsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLElBQUksRUFBRTtnQkFDN0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsQ0FBQztvQkFDM0IsU0FBUyxFQUFFLE1BQU07b0JBQ2pCLFFBQVEsRUFBRSxFQUFFO2lCQUNiLENBQUMsQ0FBQzthQUNKO2lCQUFNO2dCQUNMLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFNO29CQUNoRSxLQUFJLENBQUMsUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN2QyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBQyxLQUFLO29CQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsS0FBSyxDQUFDLENBQUM7Z0JBQzFDLENBQUMsQ0FBQyxDQUFDO2FBQ0o7U0FDRjtJQUNILENBQUM7O2dCQW5Cb0MsZ0JBQWdCOztJQUo1QztRQUFSLEtBQUssRUFBRTtnRUFBb0I7SUFDbkI7UUFBUixLQUFLLEVBQUU7OERBQW9CO0lBQ0Q7UUFBMUIsWUFBWSxDQUFDLFdBQVcsQ0FBQzs0REFBMEI7SUFKekMsd0JBQXdCO1FBTHBDLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSwyQkFBMkI7WUFDckMsK1dBQWdEOztTQUVqRCxDQUFDO09BQ1csd0JBQXdCLENBMkJwQztJQUFELCtCQUFDO0NBQUEsQUEzQkQsSUEyQkM7U0EzQlksd0JBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIENvbnRlbnRDaGlsZCwgSW5wdXQsIE9uSW5pdCwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAnQGJyaWdodHBhdGgvY29tbW9uJztcbmltcG9ydCB7UHJvdmlkZXJzU2VydmljZX0gZnJvbSAnQGJyaWdodHBhdGgvc2NoZWR1bGluZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Byb3ZpZGVyLXByb3ZpZGVyLXN1bW1hcnknLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvdmlkZXItc3VtbWFyeS5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb3ZpZGVyLXN1bW1hcnkuY29tcG9uZW50LmNzcyddXG59KVxuZXhwb3J0IGNsYXNzIFByb3ZpZGVyU3VtbWFyeUNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcHJvdmlkZXJJZDogc3RyaW5nO1xuICBASW5wdXQoKSBwcm92aWRlcjogUHJvdmlkZXI7XG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYpIHRwbFJlZjogVGVtcGxhdGVSZWY8YW55PjtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3ZpZGVyU2VydmljZTogUHJvdmlkZXJzU2VydmljZSkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgLy8gY29uc29sZS5sb2coJ25nT25Jbml0IGFuZCB0cGxSZWYgPT09ICcgKyB0aGlzLnRwbFJlZik7XG4gICAgaWYgKCB0aGlzLnByb3ZpZGVyID09PSB1bmRlZmluZWQgfHwgdGhpcy5wcm92aWRlciA9PT0gbnVsbCkge1xuICAgICAgLy8gd2UgbmVlZCB0byBoYXZlIGEgcHJvdmlkZXJJZCBvciB0aGVyZSdzIGEgcHJvYmxlbSBoZXJlXG4gICAgICBpZiAodGhpcy5wcm92aWRlcklkID09PSB1bmRlZmluZWQgfHwgdGhpcy5wcm92aWRlcklkID09PSBudWxsKSB7XG4gICAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIoe1xuICAgICAgICAgIGZpcnN0TmFtZTogJ05vbmUnLFxuICAgICAgICAgIGxhc3ROYW1lOiAnJ1xuICAgICAgICB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMucHJvdmlkZXJTZXJ2aWNlLmdldFByb3ZpZGVyQnlJZCh0aGlzLnByb3ZpZGVySWQpLnRoZW4oKHJlc3VsdCkgPT4ge1xuICAgICAgICAgIHRoaXMucHJvdmlkZXIgPSBuZXcgUHJvdmlkZXIocmVzdWx0KTtcbiAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ0FuIGVycm9yIG9jY3VycmVkJywgZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxufVxuIl19