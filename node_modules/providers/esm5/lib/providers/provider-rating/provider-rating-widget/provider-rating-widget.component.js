import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { FormControl, Validators } from '@angular/forms';
import { HttpClient } from '@angular/common/http';
import { CustomerReview } from '../customer-review';
import { ActivatedRoute, Router } from '@angular/router';
import { MatSnackBar } from '@angular/material/snack-bar';
import { ProvidersService } from '@brightpath/scheduling';
var ProviderRatingWidgetComponent = /** @class */ (function () {
    function ProviderRatingWidgetComponent(providerService, http, snackbar, router, route) {
        this.providerService = providerService;
        this.http = http;
        this.snackbar = snackbar;
        this.router = router;
        this.route = route;
        this.providerId = '';
        this.customerId = '';
        this.rating = 0;
        this.ratings = [];
        this.commentFormControl = new FormControl('', [Validators.required]);
        this.loading = false;
        this.loadingReviews = false;
        this.saved = new EventEmitter();
    }
    ProviderRatingWidgetComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadingReviews = true;
        this.providerService.getProviderById(this.provider.id)
            .then(function (response) {
            console.log(response);
            _this.provider = response;
        }, function (error) {
            console.log('Error getting provider');
            console.log(error);
        });
        this.providerService.getRatingsForProvider(this.provider.id)
            .then(function (response) {
            console.log('success', response);
            _this.ratings = response;
            _this.loadingReviews = false;
        });
    };
    ProviderRatingWidgetComponent.prototype.onRatingChanged = function (rating) {
        console.log('Changed: ' + rating);
        this.rating = rating;
    };
    ProviderRatingWidgetComponent.prototype.submitRating = function () {
        var _this = this;
        var customerReview = new CustomerReview();
        customerReview.id = this.provider.id;
        customerReview.range = this.customerId;
        customerReview.submittedOn = new Date().getTime();
        customerReview.rating = this.rating;
        customerReview.comments = this.commentFormControl.value;
        var reviewUrl = "https://api-dev.brightpathvt.com/customers/reviews";
        this.loading = true;
        console.log('customerreview', customerReview);
        this.http.post(reviewUrl, customerReview)
            .subscribe(function (response) {
            _this.loading = false;
            _this.snackbar.open('Review Saved', 'OK', {
                verticalPosition: 'top',
                duration: 2000
            });
            // show the success message
            _this.saved.emit(response);
            // this.router.navigateByUrl('/home');
        }, function (error) {
            _this.loading = false;
        }, function () {
            _this.loading = false;
        });
    };
    ProviderRatingWidgetComponent.ctorParameters = function () { return [
        { type: ProvidersService },
        { type: HttpClient },
        { type: MatSnackBar },
        { type: Router },
        { type: ActivatedRoute }
    ]; };
    __decorate([
        Input()
    ], ProviderRatingWidgetComponent.prototype, "provider", void 0);
    __decorate([
        Input()
    ], ProviderRatingWidgetComponent.prototype, "providerId", void 0);
    __decorate([
        Input()
    ], ProviderRatingWidgetComponent.prototype, "customerId", void 0);
    __decorate([
        Output()
    ], ProviderRatingWidgetComponent.prototype, "saved", void 0);
    ProviderRatingWidgetComponent = __decorate([
        Component({
            selector: 'provider-rating-widget',
            template: "<div fxLayout=\"column\" class=\"p-16 orange-50-bg\">\n  <div>\n    1.  On a scale of five stars, how pleased are you with the counseling services you have received from {{ provider?.firstName }}?\n  </div>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center\" class=\"mt-16\">\n    <mat-star-rating\n      [rating]=\"rating\"\n      starCount=\"5\"\n      color=\"accent\"\n      (ratingUpdated)=\"onRatingChanged($event)\">\n    </mat-star-rating>\n  </div>\n  <div class=\"mt-16\">\n    2.  Please comment on why you have given {{ provider?.firstName }} the rating above.\n  </div>\n  <div fxLayout=\"row\" class=\"mt-16\">\n    <mat-form-field fxFlex>\n      <textarea placeholder=\"Comments\" matInput [formControl]=\"commentFormControl\"></textarea>\n      <mat-error>\n        Required\n      </mat-error>\n    </mat-form-field>\n  </div>\n  <div fxLayout=\"row\" class=\"mt-16\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"end\" *ngIf=\"loading\">\n      <mat-spinner [diameter]=\"25\"></mat-spinner>\n    </div>\n    <button mat-raised-button (click)=\"submitRating()\" [disabled]=\"loading\">Submit</button>\n  </div>\n</div>\n<div class=\"mt-16 p-16\">\n  <div class=\"mat-title\">\n    Reviews\n  </div>\n  <provider-rating-item *ngFor=\"let rating of ratings\" [customerRating]=\"rating\"></provider-rating-item>\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" *ngIf=\"loadingReviews\">\n    <mat-spinner [diameter]=\"25\"></mat-spinner>\n    <div class=\"ml-8\">Loading...</div>\n  </div>\n</div>\n\n",
            styles: [""]
        })
    ], ProviderRatingWidgetComponent);
    return ProviderRatingWidgetComponent;
}());
export { ProviderRatingWidgetComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItcmF0aW5nLXdpZGdldC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9wcm92aWRlcnMvIiwic291cmNlcyI6WyJsaWIvcHJvdmlkZXJzL3Byb3ZpZGVyLXJhdGluZy9wcm92aWRlci1yYXRpbmctd2lkZ2V0L3Byb3ZpZGVyLXJhdGluZy13aWRnZXQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUMsU0FBUyxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQVUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBQzdFLE9BQU8sRUFBQyxXQUFXLEVBQUUsVUFBVSxFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFDdkQsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLHNCQUFzQixDQUFDO0FBQ2hELE9BQU8sRUFBQyxjQUFjLEVBQUMsTUFBTSxvQkFBb0IsQ0FBQztBQUNsRCxPQUFPLEVBQUMsY0FBYyxFQUFFLE1BQU0sRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUUxRCxPQUFPLEVBQUMsZ0JBQWdCLEVBQUMsTUFBTSx3QkFBd0IsQ0FBQztBQU94RDtJQWNFLHVDQUFvQixlQUFpQyxFQUNqQyxJQUFnQixFQUNoQixRQUFxQixFQUNyQixNQUFjLEVBQ2QsS0FBcUI7UUFKckIsb0JBQWUsR0FBZixlQUFlLENBQWtCO1FBQ2pDLFNBQUksR0FBSixJQUFJLENBQVk7UUFDaEIsYUFBUSxHQUFSLFFBQVEsQ0FBYTtRQUNyQixXQUFNLEdBQU4sTUFBTSxDQUFRO1FBQ2QsVUFBSyxHQUFMLEtBQUssQ0FBZ0I7UUFmaEMsZUFBVSxHQUFHLEVBQUUsQ0FBQztRQUNoQixlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ3pCLFdBQU0sR0FBRyxDQUFDLENBQUM7UUFDWCxZQUFPLEdBQUcsRUFBRSxDQUFDO1FBRWIsdUJBQWtCLEdBQUcsSUFBSSxXQUFXLENBQUMsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUM7UUFDaEUsWUFBTyxHQUFHLEtBQUssQ0FBQztRQUNoQixtQkFBYyxHQUFHLEtBQUssQ0FBQztRQUNiLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0lBUXJDLENBQUM7SUFFRCxnREFBUSxHQUFSO1FBQUEsaUJBa0JDO1FBakJDLElBQUksQ0FBQyxjQUFjLEdBQUcsSUFBSSxDQUFDO1FBQzNCLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO2FBQ25ELElBQUksQ0FBQyxVQUFDLFFBQWE7WUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN0QixLQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztRQUMzQixDQUFDLEVBQ0QsVUFBQyxLQUFLO1lBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1lBQ3RDLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDckIsQ0FBQyxDQUNGLENBQUM7UUFDSixJQUFJLENBQUMsZUFBZSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDO2FBQ3pELElBQUksQ0FBQyxVQUFDLFFBQWE7WUFDbEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsUUFBUSxDQUFDLENBQUM7WUFDakMsS0FBSSxDQUFDLE9BQU8sR0FBRyxRQUFRLENBQUM7WUFDeEIsS0FBSSxDQUFDLGNBQWMsR0FBRyxLQUFLLENBQUM7UUFDOUIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0lBRUQsdURBQWUsR0FBZixVQUFnQixNQUFNO1FBQ3BCLE9BQU8sQ0FBQyxHQUFHLENBQUMsV0FBVyxHQUFHLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFFRCxvREFBWSxHQUFaO1FBQUEsaUJBOEJDO1FBN0JDLElBQU0sY0FBYyxHQUFtQixJQUFJLGNBQWMsRUFBRSxDQUFDO1FBQzVELGNBQWMsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDckMsY0FBYyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3ZDLGNBQWMsQ0FBQyxXQUFXLEdBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNsRCxjQUFjLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDcEMsY0FBYyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxDQUFDO1FBRXhELElBQU0sU0FBUyxHQUFHLG9EQUFvRCxDQUFDO1FBRXZFLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBRXBCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsY0FBYyxDQUFDLENBQUM7UUFFOUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFLGNBQWMsQ0FBQzthQUN0QyxTQUFTLENBQUMsVUFBQyxRQUFRO1lBQ2xCLEtBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO1lBQ3JCLEtBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxJQUFJLEVBQUU7Z0JBQ3ZDLGdCQUFnQixFQUFFLEtBQUs7Z0JBQ3ZCLFFBQVEsRUFBRSxJQUFJO2FBQ2YsQ0FBQyxDQUFDO1lBRUgsMkJBQTJCO1lBQzNCLEtBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzFCLHNDQUFzQztRQUN4QyxDQUFDLEVBQUUsVUFBQyxLQUFLO1lBQ1AsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDdkIsQ0FBQyxFQUFFO1lBQ0QsS0FBSSxDQUFDLE9BQU8sR0FBRyxLQUFLLENBQUM7UUFDdkIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDOztnQkE5RG9DLGdCQUFnQjtnQkFDM0IsVUFBVTtnQkFDTixXQUFXO2dCQUNiLE1BQU07Z0JBQ1AsY0FBYzs7SUFoQmhDO1FBQVIsS0FBSyxFQUFFO21FQUFvQjtJQUNuQjtRQUFSLEtBQUssRUFBRTtxRUFBaUI7SUFDaEI7UUFBUixLQUFLLEVBQUU7cUVBQWlCO0lBT2Y7UUFBVCxNQUFNLEVBQUU7Z0VBQTRCO0lBWDFCLDZCQUE2QjtRQUx6QyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsd0JBQXdCO1lBQ2xDLDIvQ0FBc0Q7O1NBRXZELENBQUM7T0FDVyw2QkFBNkIsQ0E4RXpDO0lBQUQsb0NBQUM7Q0FBQSxBQTlFRCxJQThFQztTQTlFWSw2QkFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtGb3JtQ29udHJvbCwgVmFsaWRhdG9yc30gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xuaW1wb3J0IHtIdHRwQ2xpZW50fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQge0N1c3RvbWVyUmV2aWV3fSBmcm9tICcuLi9jdXN0b21lci1yZXZpZXcnO1xuaW1wb3J0IHtBY3RpdmF0ZWRSb3V0ZSwgUm91dGVyfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgTWF0U25hY2tCYXIgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbmFjay1iYXInO1xuaW1wb3J0IHtQcm92aWRlcn0gZnJvbSAnQGJyaWdodHBhdGgvY29tbW9uJztcbmltcG9ydCB7UHJvdmlkZXJzU2VydmljZX0gZnJvbSAnQGJyaWdodHBhdGgvc2NoZWR1bGluZyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Byb3ZpZGVyLXJhdGluZy13aWRnZXQnLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvdmlkZXItcmF0aW5nLXdpZGdldC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb3ZpZGVyLXJhdGluZy13aWRnZXQuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlclJhdGluZ1dpZGdldENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCkgcHJvdmlkZXI6IFByb3ZpZGVyO1xuICBASW5wdXQoKSBwcm92aWRlcklkID0gJyc7XG4gIEBJbnB1dCgpIGN1c3RvbWVySWQgPSAnJztcbiAgcmF0aW5nID0gMDtcbiAgcmF0aW5ncyA9IFtdO1xuXG4gIGNvbW1lbnRGb3JtQ29udHJvbCA9IG5ldyBGb3JtQ29udHJvbCgnJywgW1ZhbGlkYXRvcnMucmVxdWlyZWRdKTtcbiAgbG9hZGluZyA9IGZhbHNlO1xuICBsb2FkaW5nUmV2aWV3cyA9IGZhbHNlO1xuICBAT3V0cHV0KCkgc2F2ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3ZpZGVyU2VydmljZTogUHJvdmlkZXJzU2VydmljZSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxuICAgICAgICAgICAgICBwcml2YXRlIHNuYWNrYmFyOiBNYXRTbmFja0JhcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUpIHtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMubG9hZGluZ1Jldmlld3MgPSB0cnVlO1xuICAgIHRoaXMucHJvdmlkZXJTZXJ2aWNlLmdldFByb3ZpZGVyQnlJZCh0aGlzLnByb3ZpZGVyLmlkKVxuICAgICAgLnRoZW4oKHJlc3BvbnNlOiBhbnkpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZSk7XG4gICAgICAgICAgdGhpcy5wcm92aWRlciA9IHJlc3BvbnNlO1xuICAgICAgICB9LFxuICAgICAgICAoZXJyb3IpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnRXJyb3IgZ2V0dGluZyBwcm92aWRlcicpO1xuICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgKTtcbiAgICB0aGlzLnByb3ZpZGVyU2VydmljZS5nZXRSYXRpbmdzRm9yUHJvdmlkZXIodGhpcy5wcm92aWRlci5pZClcbiAgICAgIC50aGVuKChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdzdWNjZXNzJywgcmVzcG9uc2UpO1xuICAgICAgICB0aGlzLnJhdGluZ3MgPSByZXNwb25zZTtcbiAgICAgICAgdGhpcy5sb2FkaW5nUmV2aWV3cyA9IGZhbHNlO1xuICAgICAgfSk7XG4gIH1cblxuICBvblJhdGluZ0NoYW5nZWQocmF0aW5nKSB7XG4gICAgY29uc29sZS5sb2coJ0NoYW5nZWQ6ICcgKyByYXRpbmcpO1xuICAgIHRoaXMucmF0aW5nID0gcmF0aW5nO1xuICB9XG5cbiAgc3VibWl0UmF0aW5nKCkge1xuICAgIGNvbnN0IGN1c3RvbWVyUmV2aWV3OiBDdXN0b21lclJldmlldyA9IG5ldyBDdXN0b21lclJldmlldygpO1xuICAgIGN1c3RvbWVyUmV2aWV3LmlkID0gdGhpcy5wcm92aWRlci5pZDtcbiAgICBjdXN0b21lclJldmlldy5yYW5nZSA9IHRoaXMuY3VzdG9tZXJJZDtcbiAgICBjdXN0b21lclJldmlldy5zdWJtaXR0ZWRPbiA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpO1xuICAgIGN1c3RvbWVyUmV2aWV3LnJhdGluZyA9IHRoaXMucmF0aW5nO1xuICAgIGN1c3RvbWVyUmV2aWV3LmNvbW1lbnRzID0gdGhpcy5jb21tZW50Rm9ybUNvbnRyb2wudmFsdWU7XG5cbiAgICBjb25zdCByZXZpZXdVcmwgPSBgaHR0cHM6Ly9hcGktZGV2LmJyaWdodHBhdGh2dC5jb20vY3VzdG9tZXJzL3Jldmlld3NgO1xuXG4gICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTtcblxuICAgIGNvbnNvbGUubG9nKCdjdXN0b21lcnJldmlldycsIGN1c3RvbWVyUmV2aWV3KTtcblxuICAgIHRoaXMuaHR0cC5wb3N0KHJldmlld1VybCwgY3VzdG9tZXJSZXZpZXcpXG4gICAgICAuc3Vic2NyaWJlKChyZXNwb25zZSkgPT4ge1xuICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5zbmFja2Jhci5vcGVuKCdSZXZpZXcgU2F2ZWQnLCAnT0snLCB7XG4gICAgICAgICAgdmVydGljYWxQb3NpdGlvbjogJ3RvcCcsXG4gICAgICAgICAgZHVyYXRpb246IDIwMDBcbiAgICAgICAgfSk7XG5cbiAgICAgICAgLy8gc2hvdyB0aGUgc3VjY2VzcyBtZXNzYWdlXG4gICAgICAgIHRoaXMuc2F2ZWQuZW1pdChyZXNwb25zZSk7XG4gICAgICAgIC8vIHRoaXMucm91dGVyLm5hdmlnYXRlQnlVcmwoJy9ob21lJyk7XG4gICAgICB9LCAoZXJyb3IpID0+IHtcbiAgICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB9LCAoKSA9PiB7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSk7XG4gIH1cblxufVxuIl19