import { __decorate } from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { HttpClient } from '@angular/common/http';
import { MatSnackBar } from '@angular/material/snack-bar';
import { ProvidersService } from '@brightpath/scheduling';
var ProviderRatingComponent = /** @class */ (function () {
    function ProviderRatingComponent(providerService, http, snackbar, router, route) {
        this.providerService = providerService;
        this.http = http;
        this.snackbar = snackbar;
        this.router = router;
        this.route = route;
        this.providerId = '';
        this.showWidget = false;
    }
    ProviderRatingComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            console.log(params);
            if (params.id) {
                _this.providerId = params.id;
            }
            _this.showWidget = true;
        });
    };
    ProviderRatingComponent.ctorParameters = function () { return [
        { type: ProvidersService },
        { type: HttpClient },
        { type: MatSnackBar },
        { type: Router },
        { type: ActivatedRoute }
    ]; };
    ProviderRatingComponent = __decorate([
        Component({
            selector: 'provider-rating',
            template: "<div class=\"page-layout blank p-24\" fusePerfectScrollbar>\n  <provider-rating-widget *ngIf=\"showWidget\" [providerId]=\"providerId\"></provider-rating-widget>\n</div>\n",
            styles: [""]
        })
    ], ProviderRatingComponent);
    return ProviderRatingComponent;
}());
export { ProviderRatingComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItcmF0aW5nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3Byb3ZpZGVycy8iLCJzb3VyY2VzIjpbImxpYi9wcm92aWRlcnMvcHJvdmlkZXItcmF0aW5nL3Byb3ZpZGVyLXJhdGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbEQsT0FBTyxFQUFDLGNBQWMsRUFBRSxNQUFNLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUMsVUFBVSxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDaEQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBQzFELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBT3hEO0lBS0UsaUNBQW9CLGVBQWlDLEVBQ2pDLElBQWdCLEVBQ2hCLFFBQXFCLEVBQ3JCLE1BQWMsRUFDZCxLQUFxQjtRQUpyQixvQkFBZSxHQUFmLGVBQWUsQ0FBa0I7UUFDakMsU0FBSSxHQUFKLElBQUksQ0FBWTtRQUNoQixhQUFRLEdBQVIsUUFBUSxDQUFhO1FBQ3JCLFdBQU0sR0FBTixNQUFNLENBQVE7UUFDZCxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQVB6QyxlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLGVBQVUsR0FBRyxLQUFLLENBQUM7SUFNMEIsQ0FBQztJQUU5QywwQ0FBUSxHQUFSO1FBQUEsaUJBU0M7UUFSQyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsVUFBQyxNQUFNO1lBQ2pDLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLENBQUM7WUFDcEIsSUFBSSxNQUFNLENBQUMsRUFBRSxFQUFFO2dCQUNiLEtBQUksQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDLEVBQUUsQ0FBQzthQUM3QjtZQUNELEtBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ3pCLENBQUMsQ0FBQyxDQUFDO0lBRUwsQ0FBQzs7Z0JBZm9DLGdCQUFnQjtnQkFDM0IsVUFBVTtnQkFDTixXQUFXO2dCQUNiLE1BQU07Z0JBQ1AsY0FBYzs7SUFUOUIsdUJBQXVCO1FBTG5DLFNBQVMsQ0FBQztZQUNULFFBQVEsRUFBRSxpQkFBaUI7WUFDM0IsdUxBQStDOztTQUVoRCxDQUFDO09BQ1csdUJBQXVCLENBcUJuQztJQUFELDhCQUFDO0NBQUEsQUFyQkQsSUFxQkM7U0FyQlksdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7QWN0aXZhdGVkUm91dGUsIFJvdXRlcn0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7SHR0cENsaWVudH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgTWF0U25hY2tCYXIgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9zbmFjay1iYXInO1xuaW1wb3J0IHtQcm92aWRlcnNTZXJ2aWNlfSBmcm9tICdAYnJpZ2h0cGF0aC9zY2hlZHVsaW5nJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAncHJvdmlkZXItcmF0aW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb3ZpZGVyLXJhdGluZy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb3ZpZGVyLXJhdGluZy5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIFByb3ZpZGVyUmF0aW5nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBwcm92aWRlcklkID0gJyc7XG4gIHNob3dXaWRnZXQgPSBmYWxzZTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHByb3ZpZGVyU2VydmljZTogUHJvdmlkZXJzU2VydmljZSxcbiAgICAgICAgICAgICAgcHJpdmF0ZSBodHRwOiBIdHRwQ2xpZW50LFxuICAgICAgICAgICAgICBwcml2YXRlIHNuYWNrYmFyOiBNYXRTbmFja0JhcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZXI6IFJvdXRlcixcbiAgICAgICAgICAgICAgcHJpdmF0ZSByb3V0ZTogQWN0aXZhdGVkUm91dGUpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMucm91dGUucGFyYW1zLnN1YnNjcmliZSgocGFyYW1zKSA9PiB7XG4gICAgICBjb25zb2xlLmxvZyhwYXJhbXMpO1xuICAgICAgaWYgKHBhcmFtcy5pZCkge1xuICAgICAgICB0aGlzLnByb3ZpZGVySWQgPSBwYXJhbXMuaWQ7XG4gICAgICB9XG4gICAgICB0aGlzLnNob3dXaWRnZXQgPSB0cnVlO1xuICAgIH0pO1xuXG4gIH1cbn1cbiJdfQ==