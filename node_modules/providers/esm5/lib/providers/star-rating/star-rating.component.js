import { __decorate } from "tslib";
import { Component, Input, Output, EventEmitter, ViewEncapsulation } from '@angular/core';
import { MatSnackBar } from '@angular/material/snack-bar';
var StarRatingComponent = /** @class */ (function () {
    function StarRatingComponent(snackBar) {
        this.snackBar = snackBar;
        this.ratingUpdated = new EventEmitter();
        this.snackBarDuration = 2000;
        this.ratingArr = [];
    }
    StarRatingComponent.prototype.ngOnInit = function () {
        for (var index = 0; index < this.starCount; index++) {
            this.ratingArr.push(index);
        }
    };
    StarRatingComponent.prototype.onClick = function (rating) {
        console.log(rating);
        this.ratingUpdated.emit(rating);
        return false;
    };
    StarRatingComponent.prototype.showRatingLabel = function (level) {
        var result = '';
        switch (level) {
            case 1:
                result = 'Poor';
                break;
            case 2:
                result = 'Not Good';
                break;
            case 3:
                result = 'Fine';
                break;
            case 4:
                result = 'Really Good';
                break;
            case 5:
                result = 'Excellent';
                break;
        }
        return result;
    };
    StarRatingComponent.prototype.showIcon = function (index) {
        if (this.rating >= index + 1) {
            return 'star';
        }
        else {
            return 'star_border';
        }
    };
    StarRatingComponent.ctorParameters = function () { return [
        { type: MatSnackBar }
    ]; };
    __decorate([
        Input('rating')
    ], StarRatingComponent.prototype, "rating", void 0);
    __decorate([
        Input('starCount')
    ], StarRatingComponent.prototype, "starCount", void 0);
    __decorate([
        Input('color')
    ], StarRatingComponent.prototype, "color", void 0);
    __decorate([
        Output()
    ], StarRatingComponent.prototype, "ratingUpdated", void 0);
    StarRatingComponent = __decorate([
        Component({
            selector: 'mat-star-rating',
            template: "<button mat-icon-button [color]=\"color\" *ngFor=\"let ratingId of ratingArr;index as i\" [id]=\"'star_'+i\" (click)=\"onClick(i+1)\" [matTooltip]=\"showRatingLabel(ratingId+1)\" matTooltipPosition=\"above\">\n  <mat-icon class=\"yellow-icon\">\n    {{showIcon(i)}}\n  </mat-icon>\n</button>\n<mat-error *ngIf=\"starCount == null || starCount == 0\">\n  Star count is <strong>required</strong> and cannot be zero\n</mat-error>\n",
            encapsulation: ViewEncapsulation.Emulated,
            styles: ["button{height:20px;width:25px;line-height:20px}.yellow-icon{color:#fdd835}.yellow-icon svg{fill:#fdd835}"]
        })
    ], StarRatingComponent);
    return StarRatingComponent;
}());
export { StarRatingComponent };
export var StarRatingColor;
(function (StarRatingColor) {
    StarRatingColor["primary"] = "primary";
    StarRatingColor["accent"] = "accent";
    StarRatingColor["warn"] = "warn";
})(StarRatingColor || (StarRatingColor = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3Rhci1yYXRpbmcuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vcHJvdmlkZXJzLyIsInNvdXJjZXMiOlsibGliL3Byb3ZpZGVycy9zdGFyLXJhdGluZy9zdGFyLXJhdGluZy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsS0FBSyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbEcsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDZCQUE2QixDQUFDO0FBUTFEO0lBVUUsNkJBQW9CLFFBQXFCO1FBQXJCLGFBQVEsR0FBUixRQUFRLENBQWE7UUFMdkIsa0JBQWEsR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTdDLHFCQUFnQixHQUFHLElBQUksQ0FBQztRQUN6QixjQUFTLEdBQUcsRUFBRSxDQUFDO0lBR3RCLENBQUM7SUFHRCxzQ0FBUSxHQUFSO1FBQ0UsS0FBSyxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUUsS0FBSyxHQUFHLElBQUksQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLEVBQUU7WUFDbkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDNUI7SUFDSCxDQUFDO0lBQ0QscUNBQU8sR0FBUCxVQUFRLE1BQWM7UUFDcEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQixJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNoQyxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFFRCw2Q0FBZSxHQUFmLFVBQWdCLEtBQWE7UUFDM0IsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDO1FBQ2hCLFFBQVEsS0FBSyxFQUFFO1lBQ2IsS0FBSyxDQUFDO2dCQUFFLE1BQU0sR0FBRyxNQUFNLENBQUM7Z0JBQUMsTUFBTTtZQUMvQixLQUFLLENBQUM7Z0JBQUUsTUFBTSxHQUFHLFVBQVUsQ0FBQztnQkFBQyxNQUFNO1lBQ25DLEtBQUssQ0FBQztnQkFBRSxNQUFNLEdBQUcsTUFBTSxDQUFDO2dCQUFDLE1BQU07WUFDL0IsS0FBSyxDQUFDO2dCQUFFLE1BQU0sR0FBRyxhQUFhLENBQUM7Z0JBQUMsTUFBTTtZQUN0QyxLQUFLLENBQUM7Z0JBQUUsTUFBTSxHQUFHLFdBQVcsQ0FBQztnQkFBQyxNQUFNO1NBQ3JDO1FBQ0QsT0FBTyxNQUFNLENBQUM7SUFDaEIsQ0FBQztJQUVELHNDQUFRLEdBQVIsVUFBUyxLQUFhO1FBQ3BCLElBQUksSUFBSSxDQUFDLE1BQU0sSUFBSSxLQUFLLEdBQUcsQ0FBQyxFQUFFO1lBQzVCLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7YUFBTTtZQUNMLE9BQU8sYUFBYSxDQUFDO1NBQ3RCO0lBQ0gsQ0FBQzs7Z0JBakM2QixXQUFXOztJQVJ4QjtRQUFoQixLQUFLLENBQUMsUUFBUSxDQUFDO3VEQUF3QjtJQUNwQjtRQUFuQixLQUFLLENBQUMsV0FBVyxDQUFDOzBEQUEwQjtJQUM3QjtRQUFmLEtBQUssQ0FBQyxPQUFPLENBQUM7c0RBQWU7SUFDcEI7UUFBVCxNQUFNLEVBQUU7OERBQTRDO0lBTDFDLG1CQUFtQjtRQU4vQixTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsaUJBQWlCO1lBQzNCLHdiQUEyQztZQUUzQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsUUFBUTs7U0FDMUMsQ0FBQztPQUNXLG1CQUFtQixDQTZDL0I7SUFBRCwwQkFBQztDQUFBLEFBN0NELElBNkNDO1NBN0NZLG1CQUFtQjtBQThDaEMsTUFBTSxDQUFOLElBQVksZUFJWDtBQUpELFdBQVksZUFBZTtJQUN6QixzQ0FBbUIsQ0FBQTtJQUNuQixvQ0FBaUIsQ0FBQTtJQUNqQixnQ0FBYSxDQUFBO0FBQ2YsQ0FBQyxFQUpXLGVBQWUsS0FBZixlQUFlLFFBSTFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgVmlld0VuY2Fwc3VsYXRpb24gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdFNuYWNrQmFyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc25hY2stYmFyJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbWF0LXN0YXItcmF0aW5nJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0YXItcmF0aW5nLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vc3Rhci1yYXRpbmcuY29tcG9uZW50LnNjc3MnXSxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uRW11bGF0ZWRcbn0pXG5leHBvcnQgY2xhc3MgU3RhclJhdGluZ0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG5cbiAgQElucHV0KCdyYXRpbmcnKSBwcml2YXRlIHJhdGluZzogbnVtYmVyO1xuICBASW5wdXQoJ3N0YXJDb3VudCcpIHB1YmxpYyBzdGFyQ291bnQ6IG51bWJlcjtcbiAgQElucHV0KCdjb2xvcicpIGNvbG9yOiBzdHJpbmc7XG4gIEBPdXRwdXQoKSBwcml2YXRlIHJhdGluZ1VwZGF0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgcHJpdmF0ZSBzbmFja0JhckR1cmF0aW9uID0gMjAwMDtcbiAgcHVibGljIHJhdGluZ0FyciA9IFtdO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc25hY2tCYXI6IE1hdFNuYWNrQmFyKSB7XG4gIH1cblxuXG4gIG5nT25Jbml0KCkge1xuICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLnN0YXJDb3VudDsgaW5kZXgrKykge1xuICAgICAgdGhpcy5yYXRpbmdBcnIucHVzaChpbmRleCk7XG4gICAgfVxuICB9XG4gIG9uQ2xpY2socmF0aW5nOiBudW1iZXIpIHtcbiAgICBjb25zb2xlLmxvZyhyYXRpbmcpO1xuICAgIHRoaXMucmF0aW5nVXBkYXRlZC5lbWl0KHJhdGluZyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc2hvd1JhdGluZ0xhYmVsKGxldmVsOiBudW1iZXIpe1xuICAgIGxldCByZXN1bHQgPSAnJztcbiAgICBzd2l0Y2ggKGxldmVsKSB7XG4gICAgICBjYXNlIDE6IHJlc3VsdCA9ICdQb29yJzsgYnJlYWs7XG4gICAgICBjYXNlIDI6IHJlc3VsdCA9ICdOb3QgR29vZCc7IGJyZWFrO1xuICAgICAgY2FzZSAzOiByZXN1bHQgPSAnRmluZSc7IGJyZWFrO1xuICAgICAgY2FzZSA0OiByZXN1bHQgPSAnUmVhbGx5IEdvb2QnOyBicmVhaztcbiAgICAgIGNhc2UgNTogcmVzdWx0ID0gJ0V4Y2VsbGVudCc7IGJyZWFrO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgc2hvd0ljb24oaW5kZXg6IG51bWJlcikge1xuICAgIGlmICh0aGlzLnJhdGluZyA+PSBpbmRleCArIDEpIHtcbiAgICAgIHJldHVybiAnc3Rhcic7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiAnc3Rhcl9ib3JkZXInO1xuICAgIH1cbiAgfVxuXG59XG5leHBvcnQgZW51bSBTdGFyUmF0aW5nQ29sb3Ige1xuICBwcmltYXJ5ID0gJ3ByaW1hcnknLFxuICBhY2NlbnQgPSAnYWNjZW50JyxcbiAgd2FybiA9ICd3YXJuJ1xufVxuIl19