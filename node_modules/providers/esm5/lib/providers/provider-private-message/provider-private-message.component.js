import { __decorate } from "tslib";
import { Component, EventEmitter, Input, Output } from '@angular/core';
import { UUID } from 'angular2-uuid';
import { MatSnackBar } from '@angular/material/snack-bar';
import { StreamActivity, StreamClientService } from '@brightpath/activity-stream';
var ProviderPrivateMessageComponent = /** @class */ (function () {
    function ProviderPrivateMessageComponent(streamClientService, snackbar) {
        this.streamClientService = streamClientService;
        this.snackbar = snackbar;
        this.close = new EventEmitter();
    }
    ProviderPrivateMessageComponent.prototype.onPrivateMessage = function (privateMessage) {
        var _this = this;
        privateMessage.actor = 'customers:' + this.customerId;
        privateMessage.threadId = UUID.UUID();
        privateMessage.to = ["notification:" + this.providerId];
        privateMessage.target = "inbox:" + this.providerId;
        this.streamClientService.getToken('inbox', this.providerId).then(function (response) {
            var token = response.token;
            _this.streamClientService.addActivity(privateMessage, 'inbox', _this.providerId, token).then(function (privateMessageResponse) {
                _this.snackbar.open('Sent Private Message', 'OK', {
                    verticalPosition: 'top',
                    duration: 2000
                });
            });
            _this.close.emit(true);
        });
    };
    ProviderPrivateMessageComponent.prototype.ngOnInit = function () {
    };
    ProviderPrivateMessageComponent.ctorParameters = function () { return [
        { type: StreamClientService },
        { type: MatSnackBar }
    ]; };
    __decorate([
        Input()
    ], ProviderPrivateMessageComponent.prototype, "customerId", void 0);
    __decorate([
        Input()
    ], ProviderPrivateMessageComponent.prototype, "providerId", void 0);
    __decorate([
        Output()
    ], ProviderPrivateMessageComponent.prototype, "close", void 0);
    ProviderPrivateMessageComponent = __decorate([
        Component({
            selector: 'provider-private-message',
            template: "<div class=\"p-8\">\n  <div fxLayout=\"row\" fxLayoutAlign=\"center center\" class=\"message-box error\">\n    If you are in immediate need of counseling or support, please call 911.  Messages sent to your counselor can take up to 24 hours to be read and replied to\n  </div>\n  <div fxLayout=\"column\">\n    <div fxLayout=\"row\" class=\"mt-16\">\n      <lib-activity-editor (onActivity)=\"onPrivateMessage($event)\" fxFlex></lib-activity-editor>\n    </div>\n  </div>\n</div>\n",
            styles: [""]
        })
    ], ProviderPrivateMessageComponent);
    return ProviderPrivateMessageComponent;
}());
export { ProviderPrivateMessageComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItcHJpdmF0ZS1tZXNzYWdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL3Byb3ZpZGVycy8iLCJzb3VyY2VzIjpbImxpYi9wcm92aWRlcnMvcHJvdmlkZXItcHJpdmF0ZS1tZXNzYWdlL3Byb3ZpZGVyLXByaXZhdGUtbWVzc2FnZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxNQUFNLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDN0UsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUNuQyxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDMUQsT0FBTyxFQUFDLGNBQWMsRUFBRSxtQkFBbUIsRUFBQyxNQUFNLDZCQUE2QixDQUFDO0FBT2hGO0lBTUUseUNBQW9CLG1CQUF3QyxFQUFVLFFBQXFCO1FBQXZFLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFBVSxhQUFRLEdBQVIsUUFBUSxDQUFhO1FBRmpGLFVBQUssR0FBRyxJQUFJLFlBQVksRUFBVyxDQUFDO0lBRzlDLENBQUM7SUFFRCwwREFBZ0IsR0FBaEIsVUFBaUIsY0FBOEI7UUFBL0MsaUJBZUM7UUFkQyxjQUFjLENBQUMsS0FBSyxHQUFHLFlBQVksR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQ3RELGNBQWMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3RDLGNBQWMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxrQkFBZ0IsSUFBSSxDQUFDLFVBQVksQ0FBQyxDQUFDO1FBQ3hELGNBQWMsQ0FBQyxNQUFNLEdBQUcsV0FBUyxJQUFJLENBQUMsVUFBWSxDQUFDO1FBQ25ELElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQyxRQUFhO1lBQzdFLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUM7WUFDN0IsS0FBSSxDQUFDLG1CQUFtQixDQUFDLFdBQVcsQ0FBQyxjQUFjLEVBQUUsT0FBTyxFQUFFLEtBQUksQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsc0JBQXNCO2dCQUNoSCxLQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxzQkFBc0IsRUFBRSxJQUFJLEVBQUU7b0JBQy9DLGdCQUFnQixFQUFFLEtBQUs7b0JBQ3ZCLFFBQVEsRUFBVSxJQUFJO2lCQUN2QixDQUFDLENBQUM7WUFDTCxDQUFDLENBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVELGtEQUFRLEdBQVI7SUFDQSxDQUFDOztnQkFyQndDLG1CQUFtQjtnQkFBb0IsV0FBVzs7SUFKbEY7UUFBUixLQUFLLEVBQUU7dUVBQVk7SUFDWDtRQUFSLEtBQUssRUFBRTt1RUFBWTtJQUNWO1FBQVQsTUFBTSxFQUFFO2tFQUFxQztJQUpuQywrQkFBK0I7UUFMM0MsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLDBCQUEwQjtZQUNwQyw0ZUFBd0Q7O1NBRXpELENBQUM7T0FDVywrQkFBK0IsQ0E2QjNDO0lBQUQsc0NBQUM7Q0FBQSxBQTdCRCxJQTZCQztTQTdCWSwrQkFBK0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtVVUlEfSBmcm9tICdhbmd1bGFyMi11dWlkJztcbmltcG9ydCB7IE1hdFNuYWNrQmFyIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvc25hY2stYmFyJztcbmltcG9ydCB7U3RyZWFtQWN0aXZpdHksIFN0cmVhbUNsaWVudFNlcnZpY2V9IGZyb20gJ0BicmlnaHRwYXRoL2FjdGl2aXR5LXN0cmVhbSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3Byb3ZpZGVyLXByaXZhdGUtbWVzc2FnZScsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm92aWRlci1wcml2YXRlLW1lc3NhZ2UuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wcm92aWRlci1wcml2YXRlLW1lc3NhZ2UuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlclByaXZhdGVNZXNzYWdlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcblxuICBASW5wdXQoKSBjdXN0b21lcklkO1xuICBASW5wdXQoKSBwcm92aWRlcklkO1xuICBAT3V0cHV0KCkgY2xvc2UgPSBuZXcgRXZlbnRFbWl0dGVyPGJvb2xlYW4+KCk7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBzdHJlYW1DbGllbnRTZXJ2aWNlOiBTdHJlYW1DbGllbnRTZXJ2aWNlLCBwcml2YXRlIHNuYWNrYmFyOiBNYXRTbmFja0Jhcikge1xuICB9XG5cbiAgb25Qcml2YXRlTWVzc2FnZShwcml2YXRlTWVzc2FnZTogU3RyZWFtQWN0aXZpdHkpIHtcbiAgICBwcml2YXRlTWVzc2FnZS5hY3RvciA9ICdjdXN0b21lcnM6JyArIHRoaXMuY3VzdG9tZXJJZDtcbiAgICBwcml2YXRlTWVzc2FnZS50aHJlYWRJZCA9IFVVSUQuVVVJRCgpO1xuICAgIHByaXZhdGVNZXNzYWdlLnRvID0gW2Bub3RpZmljYXRpb246JHt0aGlzLnByb3ZpZGVySWR9YF07XG4gICAgcHJpdmF0ZU1lc3NhZ2UudGFyZ2V0ID0gYGluYm94OiR7dGhpcy5wcm92aWRlcklkfWA7XG4gICAgdGhpcy5zdHJlYW1DbGllbnRTZXJ2aWNlLmdldFRva2VuKCdpbmJveCcsIHRoaXMucHJvdmlkZXJJZCkudGhlbigocmVzcG9uc2U6IGFueSkgPT4ge1xuICAgICAgY29uc3QgdG9rZW4gPSByZXNwb25zZS50b2tlbjtcbiAgICAgIHRoaXMuc3RyZWFtQ2xpZW50U2VydmljZS5hZGRBY3Rpdml0eShwcml2YXRlTWVzc2FnZSwgJ2luYm94JywgdGhpcy5wcm92aWRlcklkLCB0b2tlbikudGhlbigocHJpdmF0ZU1lc3NhZ2VSZXNwb25zZSkgPT4ge1xuICAgICAgICB0aGlzLnNuYWNrYmFyLm9wZW4oJ1NlbnQgUHJpdmF0ZSBNZXNzYWdlJywgJ09LJywge1xuICAgICAgICAgIHZlcnRpY2FsUG9zaXRpb246ICd0b3AnLFxuICAgICAgICAgIGR1cmF0aW9uICAgICAgICA6IDIwMDBcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIHRoaXMuY2xvc2UuZW1pdCh0cnVlKTtcbiAgICB9KTtcbiAgfVxuXG4gIG5nT25Jbml0KCkge1xuICB9XG5cbn1cbiJdfQ==