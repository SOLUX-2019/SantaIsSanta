import { __decorate } from "tslib";
import { Component, ContentChild, Input, TemplateRef } from '@angular/core';
import { Provider } from '@brightpath/common';
import { ProvidersService } from '@brightpath/scheduling';
let ProviderSummaryComponent = class ProviderSummaryComponent {
    constructor(providerService) {
        this.providerService = providerService;
    }
    ngOnInit() {
        // console.log('ngOnInit and tplRef === ' + this.tplRef);
        if (this.provider === undefined || this.provider === null) {
            // we need to have a providerId or there's a problem here
            if (this.providerId === undefined || this.providerId === null) {
                this.provider = new Provider({
                    firstName: 'None',
                    lastName: ''
                });
            }
            else {
                this.providerService.getProviderById(this.providerId).then((result) => {
                    this.provider = new Provider(result);
                }).catch((error) => {
                    console.log('An error occurred', error);
                });
            }
        }
    }
};
ProviderSummaryComponent.ctorParameters = () => [
    { type: ProvidersService }
];
__decorate([
    Input()
], ProviderSummaryComponent.prototype, "providerId", void 0);
__decorate([
    Input()
], ProviderSummaryComponent.prototype, "provider", void 0);
__decorate([
    ContentChild(TemplateRef)
], ProviderSummaryComponent.prototype, "tplRef", void 0);
ProviderSummaryComponent = __decorate([
    Component({
        selector: 'provider-provider-summary',
        template: "<ng-template [customTemplate]=\"tplRef\">\n  <div fxLayout=\"row\" fxLayoutGap=\"16px\" *ngIf=\"provider\">\n    <div>\n      <img class=\"avatar huge\" [src]=\"provider.imageUrl\">\n    </div>\n    <div fxFlex fxLayoutAlign=\"start center\" class=\"mat-h1\">\n      {{ provider.firstName }} {{ provider.lastName }}\n    </div>\n  </div>\n</ng-template>\n",
        styles: [""]
    })
], ProviderSummaryComponent);
export { ProviderSummaryComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvdmlkZXItc3VtbWFyeS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9wcm92aWRlcnMvIiwic291cmNlcyI6WyJsaWIvcHJvdmlkZXJzL3Byb3ZpZGVyLXN1bW1hcnkvcHJvdmlkZXItc3VtbWFyeS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBVSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDbEYsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQzVDLE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLHdCQUF3QixDQUFDO0FBT3hELElBQWEsd0JBQXdCLEdBQXJDLE1BQWEsd0JBQXdCO0lBTW5DLFlBQW9CLGVBQWlDO1FBQWpDLG9CQUFlLEdBQWYsZUFBZSxDQUFrQjtJQUFJLENBQUM7SUFFMUQsUUFBUTtRQUNOLHlEQUF5RDtRQUN6RCxJQUFLLElBQUksQ0FBQyxRQUFRLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxRQUFRLEtBQUssSUFBSSxFQUFFO1lBQzFELHlEQUF5RDtZQUN6RCxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxVQUFVLEtBQUssSUFBSSxFQUFFO2dCQUM3RCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDO29CQUMzQixTQUFTLEVBQUUsTUFBTTtvQkFDakIsUUFBUSxFQUFFLEVBQUU7aUJBQ2IsQ0FBQyxDQUFDO2FBQ0o7aUJBQU07Z0JBQ0wsSUFBSSxDQUFDLGVBQWUsQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO29CQUNwRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksUUFBUSxDQUFDLE1BQU0sQ0FBQyxDQUFDO2dCQUN2QyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtvQkFDakIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsRUFBRSxLQUFLLENBQUMsQ0FBQztnQkFDMUMsQ0FBQyxDQUFDLENBQUM7YUFDSjtTQUNGO0lBQ0gsQ0FBQztDQUVGLENBQUE7O1lBckJzQyxnQkFBZ0I7O0FBSjVDO0lBQVIsS0FBSyxFQUFFOzREQUFvQjtBQUNuQjtJQUFSLEtBQUssRUFBRTswREFBb0I7QUFDRDtJQUExQixZQUFZLENBQUMsV0FBVyxDQUFDO3dEQUEwQjtBQUp6Qyx3QkFBd0I7SUFMcEMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDJCQUEyQjtRQUNyQywrV0FBZ0Q7O0tBRWpELENBQUM7R0FDVyx3QkFBd0IsQ0EyQnBDO1NBM0JZLHdCQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBDb250ZW50Q2hpbGQsIElucHV0LCBPbkluaXQsIFRlbXBsYXRlUmVmfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7UHJvdmlkZXJ9IGZyb20gJ0BicmlnaHRwYXRoL2NvbW1vbic7XG5pbXBvcnQge1Byb3ZpZGVyc1NlcnZpY2V9IGZyb20gJ0BicmlnaHRwYXRoL3NjaGVkdWxpbmcnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdwcm92aWRlci1wcm92aWRlci1zdW1tYXJ5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb3ZpZGVyLXN1bW1hcnkuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9wcm92aWRlci1zdW1tYXJ5LmNvbXBvbmVudC5jc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBQcm92aWRlclN1bW1hcnlDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpIHByb3ZpZGVySWQ6IHN0cmluZztcbiAgQElucHV0KCkgcHJvdmlkZXI6IFByb3ZpZGVyO1xuICBAQ29udGVudENoaWxkKFRlbXBsYXRlUmVmKSB0cGxSZWY6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBwcm92aWRlclNlcnZpY2U6IFByb3ZpZGVyc1NlcnZpY2UpIHsgfVxuXG4gIG5nT25Jbml0KCkge1xuICAgIC8vIGNvbnNvbGUubG9nKCduZ09uSW5pdCBhbmQgdHBsUmVmID09PSAnICsgdGhpcy50cGxSZWYpO1xuICAgIGlmICggdGhpcy5wcm92aWRlciA9PT0gdW5kZWZpbmVkIHx8IHRoaXMucHJvdmlkZXIgPT09IG51bGwpIHtcbiAgICAgIC8vIHdlIG5lZWQgdG8gaGF2ZSBhIHByb3ZpZGVySWQgb3IgdGhlcmUncyBhIHByb2JsZW0gaGVyZVxuICAgICAgaWYgKHRoaXMucHJvdmlkZXJJZCA9PT0gdW5kZWZpbmVkIHx8IHRoaXMucHJvdmlkZXJJZCA9PT0gbnVsbCkge1xuICAgICAgICB0aGlzLnByb3ZpZGVyID0gbmV3IFByb3ZpZGVyKHtcbiAgICAgICAgICBmaXJzdE5hbWU6ICdOb25lJyxcbiAgICAgICAgICBsYXN0TmFtZTogJydcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnByb3ZpZGVyU2VydmljZS5nZXRQcm92aWRlckJ5SWQodGhpcy5wcm92aWRlcklkKS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICB0aGlzLnByb3ZpZGVyID0gbmV3IFByb3ZpZGVyKHJlc3VsdCk7XG4gICAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdBbiBlcnJvciBvY2N1cnJlZCcsIGVycm9yKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbn1cbiJdfQ==